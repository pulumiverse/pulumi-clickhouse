// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceState, opts?: pulumi.CustomResourceOptions): Service {
        return new Service(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'clickhouse:index/service:Service';

    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Service {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Service.__pulumiType;
    }

    /**
     * Cloud provider ('aws', 'gcp', or 'azure') in which the service is deployed in.
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    /**
     * Double SHA1 hash of password for connecting with the MySQL protocol. Cannot be specified if `password` is specified.
     */
    public readonly doubleSha1PasswordHash!: pulumi.Output<string | undefined>;
    /**
     * Custom role identifier arn
     */
    public readonly encryptionAssumedRoleIdentifier!: pulumi.Output<string | undefined>;
    /**
     * Custom encryption key arn
     */
    public readonly encryptionKey!: pulumi.Output<string | undefined>;
    /**
     * List of public endpoints.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.ServiceEndpoint[]>;
    /**
     * IAM role used for accessing objects in s3.
     */
    public /*out*/ readonly iamRole!: pulumi.Output<string>;
    /**
     * When set to true the service is allowed to scale down to zero when idle. Always true for development services. Configurable only for 'production' services.
     */
    public readonly idleScaling!: pulumi.Output<boolean | undefined>;
    /**
     * Set minimum idling timeout (in minutes). Available only for 'production' services. Must be greater than or equal to 5 minutes.
     */
    public readonly idleTimeoutMinutes!: pulumi.Output<number | undefined>;
    /**
     * List of IP addresses allowed to access the service.
     */
    public readonly ipAccesses!: pulumi.Output<outputs.ServiceIpAccess[]>;
    public /*out*/ readonly lastUpdated!: pulumi.Output<string>;
    /**
     * Maximum total memory of all workers during auto-scaling in Gb. Available only for 'production' services. Must be a multiple of 12 and lower than 360 for non paid services or 720 for paid services.
     */
    public readonly maxTotalMemoryGb!: pulumi.Output<number | undefined>;
    /**
     * Minimum total memory of all workers during auto-scaling in Gb. Available only for 'production' services. Must be a multiple of 12 and greater than 24.
     */
    public readonly minTotalMemoryGb!: pulumi.Output<number | undefined>;
    /**
     * User defined identifier for the service.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Password for the default user. One of either `password` or `passwordHash` must be specified.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * SHA256 hash of password for the default user. One of either `password` or `passwordHash` must be specified.
     */
    public readonly passwordHash!: pulumi.Output<string | undefined>;
    /**
     * Service config for private endpoints
     *
     * @deprecated Please use the `clickhouse.PrivateEndpoint.getConfig` data source instead.
     */
    public /*out*/ readonly privateEndpointConfig!: pulumi.Output<outputs.ServicePrivateEndpointConfig>;
    /**
     * List of private endpoint IDs
     */
    public readonly privateEndpointIds!: pulumi.Output<string[]>;
    /**
     * Region within the cloud provider in which the service is deployed in.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Tier of the service: 'development', 'production'. Production services scale, Development are fixed size.
     */
    public readonly tier!: pulumi.Output<string>;

    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceArgs | ServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceState | undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["doubleSha1PasswordHash"] = state ? state.doubleSha1PasswordHash : undefined;
            resourceInputs["encryptionAssumedRoleIdentifier"] = state ? state.encryptionAssumedRoleIdentifier : undefined;
            resourceInputs["encryptionKey"] = state ? state.encryptionKey : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["iamRole"] = state ? state.iamRole : undefined;
            resourceInputs["idleScaling"] = state ? state.idleScaling : undefined;
            resourceInputs["idleTimeoutMinutes"] = state ? state.idleTimeoutMinutes : undefined;
            resourceInputs["ipAccesses"] = state ? state.ipAccesses : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["maxTotalMemoryGb"] = state ? state.maxTotalMemoryGb : undefined;
            resourceInputs["minTotalMemoryGb"] = state ? state.minTotalMemoryGb : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordHash"] = state ? state.passwordHash : undefined;
            resourceInputs["privateEndpointConfig"] = state ? state.privateEndpointConfig : undefined;
            resourceInputs["privateEndpointIds"] = state ? state.privateEndpointIds : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["tier"] = state ? state.tier : undefined;
        } else {
            const args = argsOrState as ServiceArgs | undefined;
            if ((!args || args.cloudProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            if ((!args || args.ipAccesses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAccesses'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.tier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tier'");
            }
            resourceInputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            resourceInputs["doubleSha1PasswordHash"] = args?.doubleSha1PasswordHash ? pulumi.secret(args.doubleSha1PasswordHash) : undefined;
            resourceInputs["encryptionAssumedRoleIdentifier"] = args ? args.encryptionAssumedRoleIdentifier : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["idleScaling"] = args ? args.idleScaling : undefined;
            resourceInputs["idleTimeoutMinutes"] = args ? args.idleTimeoutMinutes : undefined;
            resourceInputs["ipAccesses"] = args ? args.ipAccesses : undefined;
            resourceInputs["maxTotalMemoryGb"] = args ? args.maxTotalMemoryGb : undefined;
            resourceInputs["minTotalMemoryGb"] = args ? args.minTotalMemoryGb : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["passwordHash"] = args?.passwordHash ? pulumi.secret(args.passwordHash) : undefined;
            resourceInputs["privateEndpointIds"] = args ? args.privateEndpointIds : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tier"] = args ? args.tier : undefined;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["iamRole"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["privateEndpointConfig"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["doubleSha1PasswordHash", "password", "passwordHash"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Service.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Service resources.
 */
export interface ServiceState {
    /**
     * Cloud provider ('aws', 'gcp', or 'azure') in which the service is deployed in.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Double SHA1 hash of password for connecting with the MySQL protocol. Cannot be specified if `password` is specified.
     */
    doubleSha1PasswordHash?: pulumi.Input<string>;
    /**
     * Custom role identifier arn
     */
    encryptionAssumedRoleIdentifier?: pulumi.Input<string>;
    /**
     * Custom encryption key arn
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * List of public endpoints.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.ServiceEndpoint>[]>;
    /**
     * IAM role used for accessing objects in s3.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * When set to true the service is allowed to scale down to zero when idle. Always true for development services. Configurable only for 'production' services.
     */
    idleScaling?: pulumi.Input<boolean>;
    /**
     * Set minimum idling timeout (in minutes). Available only for 'production' services. Must be greater than or equal to 5 minutes.
     */
    idleTimeoutMinutes?: pulumi.Input<number>;
    /**
     * List of IP addresses allowed to access the service.
     */
    ipAccesses?: pulumi.Input<pulumi.Input<inputs.ServiceIpAccess>[]>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * Maximum total memory of all workers during auto-scaling in Gb. Available only for 'production' services. Must be a multiple of 12 and lower than 360 for non paid services or 720 for paid services.
     */
    maxTotalMemoryGb?: pulumi.Input<number>;
    /**
     * Minimum total memory of all workers during auto-scaling in Gb. Available only for 'production' services. Must be a multiple of 12 and greater than 24.
     */
    minTotalMemoryGb?: pulumi.Input<number>;
    /**
     * User defined identifier for the service.
     */
    name?: pulumi.Input<string>;
    /**
     * Password for the default user. One of either `password` or `passwordHash` must be specified.
     */
    password?: pulumi.Input<string>;
    /**
     * SHA256 hash of password for the default user. One of either `password` or `passwordHash` must be specified.
     */
    passwordHash?: pulumi.Input<string>;
    /**
     * Service config for private endpoints
     *
     * @deprecated Please use the `clickhouse.PrivateEndpoint.getConfig` data source instead.
     */
    privateEndpointConfig?: pulumi.Input<inputs.ServicePrivateEndpointConfig>;
    /**
     * List of private endpoint IDs
     */
    privateEndpointIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Region within the cloud provider in which the service is deployed in.
     */
    region?: pulumi.Input<string>;
    /**
     * Tier of the service: 'development', 'production'. Production services scale, Development are fixed size.
     */
    tier?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * Cloud provider ('aws', 'gcp', or 'azure') in which the service is deployed in.
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Double SHA1 hash of password for connecting with the MySQL protocol. Cannot be specified if `password` is specified.
     */
    doubleSha1PasswordHash?: pulumi.Input<string>;
    /**
     * Custom role identifier arn
     */
    encryptionAssumedRoleIdentifier?: pulumi.Input<string>;
    /**
     * Custom encryption key arn
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * When set to true the service is allowed to scale down to zero when idle. Always true for development services. Configurable only for 'production' services.
     */
    idleScaling?: pulumi.Input<boolean>;
    /**
     * Set minimum idling timeout (in minutes). Available only for 'production' services. Must be greater than or equal to 5 minutes.
     */
    idleTimeoutMinutes?: pulumi.Input<number>;
    /**
     * List of IP addresses allowed to access the service.
     */
    ipAccesses: pulumi.Input<pulumi.Input<inputs.ServiceIpAccess>[]>;
    /**
     * Maximum total memory of all workers during auto-scaling in Gb. Available only for 'production' services. Must be a multiple of 12 and lower than 360 for non paid services or 720 for paid services.
     */
    maxTotalMemoryGb?: pulumi.Input<number>;
    /**
     * Minimum total memory of all workers during auto-scaling in Gb. Available only for 'production' services. Must be a multiple of 12 and greater than 24.
     */
    minTotalMemoryGb?: pulumi.Input<number>;
    /**
     * User defined identifier for the service.
     */
    name?: pulumi.Input<string>;
    /**
     * Password for the default user. One of either `password` or `passwordHash` must be specified.
     */
    password?: pulumi.Input<string>;
    /**
     * SHA256 hash of password for the default user. One of either `password` or `passwordHash` must be specified.
     */
    passwordHash?: pulumi.Input<string>;
    /**
     * List of private endpoint IDs
     */
    privateEndpointIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Region within the cloud provider in which the service is deployed in.
     */
    region: pulumi.Input<string>;
    /**
     * Tier of the service: 'development', 'production'. Production services scale, Development are fixed size.
     */
    tier: pulumi.Input<string>;
}
