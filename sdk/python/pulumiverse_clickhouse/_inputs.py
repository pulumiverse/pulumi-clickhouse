# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'ServiceEndpointArgs',
    'ServiceIpAccessArgs',
    'ServicePrivateEndpointConfigArgs',
]

@pulumi.input_type
class ServiceEndpointArgs:
    def __init__(__self__, *,
                 host: Optional[pulumi.Input[str]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 protocol: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] host: Endpoint host.
        :param pulumi.Input[int] port: Endpoint port.
        :param pulumi.Input[str] protocol: Endpoint protocol: https or nativesecure
        """
        if host is not None:
            pulumi.set(__self__, "host", host)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)

    @property
    @pulumi.getter
    def host(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint host.
        """
        return pulumi.get(self, "host")

    @host.setter
    def host(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[int]]:
        """
        Endpoint port.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint protocol: https or nativesecure
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "protocol", value)


@pulumi.input_type
class ServiceIpAccessArgs:
    def __init__(__self__, *,
                 source: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] source: IP address allowed to access the service. In case you want to set the ip_access to anywhere you should set source to 0.0.0.0/0
        :param pulumi.Input[str] description: Description of the IP address.
        """
        pulumi.set(__self__, "source", source)
        if description is not None:
            pulumi.set(__self__, "description", description)

    @property
    @pulumi.getter
    def source(self) -> pulumi.Input[str]:
        """
        IP address allowed to access the service. In case you want to set the ip_access to anywhere you should set source to 0.0.0.0/0
        """
        return pulumi.get(self, "source")

    @source.setter
    def source(self, value: pulumi.Input[str]):
        pulumi.set(self, "source", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the IP address.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)


@pulumi.input_type
class ServicePrivateEndpointConfigArgs:
    def __init__(__self__, *,
                 endpoint_service_id: Optional[pulumi.Input[str]] = None,
                 private_dns_hostname: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] endpoint_service_id: Unique identifier of the interface endpoint you created in your VPC with the AWS(Service Name) or GCP(Target Service) resource
        :param pulumi.Input[str] private_dns_hostname: Private DNS Hostname of the VPC you created
        """
        if endpoint_service_id is not None:
            pulumi.set(__self__, "endpoint_service_id", endpoint_service_id)
        if private_dns_hostname is not None:
            pulumi.set(__self__, "private_dns_hostname", private_dns_hostname)

    @property
    @pulumi.getter(name="endpointServiceId")
    def endpoint_service_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique identifier of the interface endpoint you created in your VPC with the AWS(Service Name) or GCP(Target Service) resource
        """
        return pulumi.get(self, "endpoint_service_id")

    @endpoint_service_id.setter
    def endpoint_service_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "endpoint_service_id", value)

    @property
    @pulumi.getter(name="privateDnsHostname")
    def private_dns_hostname(self) -> Optional[pulumi.Input[str]]:
        """
        Private DNS Hostname of the VPC you created
        """
        return pulumi.get(self, "private_dns_hostname")

    @private_dns_hostname.setter
    def private_dns_hostname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "private_dns_hostname", value)


