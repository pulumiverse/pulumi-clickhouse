# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetConfigResult',
    'AwaitableGetConfigResult',
    'get_config',
    'get_config_output',
]

@pulumi.output_type
class GetConfigResult:
    """
    A collection of values returned by getConfig.
    """
    def __init__(__self__, cloud_provider=None, endpoint_service_id=None, id=None, region=None):
        if cloud_provider and not isinstance(cloud_provider, str):
            raise TypeError("Expected argument 'cloud_provider' to be a str")
        pulumi.set(__self__, "cloud_provider", cloud_provider)
        if endpoint_service_id and not isinstance(endpoint_service_id, str):
            raise TypeError("Expected argument 'endpoint_service_id' to be a str")
        pulumi.set(__self__, "endpoint_service_id", endpoint_service_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter(name="cloudProvider")
    def cloud_provider(self) -> str:
        """
        The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
        """
        return pulumi.get(self, "cloud_provider")

    @property
    @pulumi.getter(name="endpointServiceId")
    def endpoint_service_id(self) -> str:
        """
        The ID of the private endpoint that is used to securely connect to ClickHouse. This is a read-only attribute.
        """
        return pulumi.get(self, "endpoint_service_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def region(self) -> str:
        """
        The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
        """
        return pulumi.get(self, "region")


class AwaitableGetConfigResult(GetConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConfigResult(
            cloud_provider=self.cloud_provider,
            endpoint_service_id=self.endpoint_service_id,
            id=self.id,
            region=self.region)


def get_config(cloud_provider: Optional[str] = None,
               region: Optional[str] = None,
               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConfigResult:
    """
    Use this data source to access information about an existing resource.

    :param str cloud_provider: The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
    :param str region: The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
    """
    __args__ = dict()
    __args__['cloudProvider'] = cloud_provider
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('clickhouse:PrivateEndpoint/getConfig:getConfig', __args__, opts=opts, typ=GetConfigResult).value

    return AwaitableGetConfigResult(
        cloud_provider=pulumi.get(__ret__, 'cloud_provider'),
        endpoint_service_id=pulumi.get(__ret__, 'endpoint_service_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))


@_utilities.lift_output_func(get_config)
def get_config_output(cloud_provider: Optional[pulumi.Input[str]] = None,
                      region: Optional[pulumi.Input[str]] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetConfigResult]:
    """
    Use this data source to access information about an existing resource.

    :param str cloud_provider: The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
    :param str region: The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
    """
    ...
