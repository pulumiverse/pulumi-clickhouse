// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privateendpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-clickhouse/sdk/go/clickhouse/internal"
)

func GetConfig(ctx *pulumi.Context, args *GetConfigArgs, opts ...pulumi.InvokeOption) (*GetConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConfigResult
	err := ctx.Invoke("clickhouse:PrivateEndpoint/getConfig:getConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfig.
type GetConfigArgs struct {
	// The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
	CloudProvider string `pulumi:"cloudProvider"`
	// The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
	Region string `pulumi:"region"`
}

// A collection of values returned by getConfig.
type GetConfigResult struct {
	// The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
	CloudProvider string `pulumi:"cloudProvider"`
	// The ID of the private endpoint that is used to securely connect to ClickHouse. This is a read-only attribute.
	EndpointServiceId string `pulumi:"endpointServiceId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
	Region string `pulumi:"region"`
}

func GetConfigOutput(ctx *pulumi.Context, args GetConfigOutputArgs, opts ...pulumi.InvokeOption) GetConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConfigResult, error) {
			args := v.(GetConfigArgs)
			r, err := GetConfig(ctx, &args, opts...)
			var s GetConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConfigResultOutput)
}

// A collection of arguments for invoking getConfig.
type GetConfigOutputArgs struct {
	// The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigArgs)(nil)).Elem()
}

// A collection of values returned by getConfig.
type GetConfigResultOutput struct{ *pulumi.OutputState }

func (GetConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigResult)(nil)).Elem()
}

func (o GetConfigResultOutput) ToGetConfigResultOutput() GetConfigResultOutput {
	return o
}

func (o GetConfigResultOutput) ToGetConfigResultOutputWithContext(ctx context.Context) GetConfigResultOutput {
	return o
}

// The cloud provider for the private endpoint. Valid values are 'aws', 'gcp', or 'azure'.
func (o GetConfigResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// The ID of the private endpoint that is used to securely connect to ClickHouse. This is a read-only attribute.
func (o GetConfigResultOutput) EndpointServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigResult) string { return v.EndpointServiceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The region for the private endpoint. Valid values are specific to the cloud provider i.e. us-east-2
func (o GetConfigResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConfigResultOutput{})
}
